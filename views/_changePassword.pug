style.
    @import url('https://fonts.googleapis.com/css?family=Josefin+Sans');
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    outline: none;
  }
  .wrapper {
    max-width: 350px;
    width: 100%;
    background: #fff;
    padding: 25px;
    border-radius: 5px;
    font-family: 'Josefin Sans', sans-serif;
    }
    .wrapper h2 {
    text-align: center;
    margin-bottom: 20px;
    text-transform: uppercase;
    letter-spacing: 3px;
    color: #332902;
    }
    .wrapper .input_field {
    margin-bottom: 10px;
    }
    .wrapper .input_field input[type='text'],.input_field input[type='password'],
    .wrapper textarea {
    border: 1px solid #e0e0e0;
    width: 100%;
    padding: 10px;
    }
    .wrapper textarea {
    resize: none;
    height: 80px;
    }
    .wrapper .btn input[type='submit'] {
    border: 0px;
    margin-top: 15px;
    padding: 10px;
    text-align: center;
    width: 100%;
    background:rgba(240, 240, 240, 255);
    border: 2px solid rgba(60, 115, 123, 255);
    color: #332902;
    text-transform: uppercase;
    letter-spacing: 5px;
    font-weight: bold;
    border-radius: 25px;
    cursor: pointer;
    }
    .heading-secondary {
    font-size: 2.25rem;
    text-transform: uppercase;
    font-weight: 700;
    background-image: -webkit-gradient(
      linear,
      left top,
      right top,
      from(#7dd56f),
      to(#28b487)
    );
    background-image: linear-gradient(to right, #7dd56f, #28b487);
    -webkit-background-clip: text;
    color: transparent;
    letter-spacing: 0.1rem;
    line-height: 1.3;
    display: inline-block;
  }
  .ma-bt-md {
  margin-bottom: 3rem !important;
  }
.wrapper
  h2.heading-secondary.ma-bt-md PASSWORD CHANGE
  form#myform
    .input_field
      p Current Password
      input#currentPassword(type='text' required, minLength='8')
    .input_field
      p New Password
      input#newPassword(type='text' required, minLength='8')
    .input_field
      p Confirm Password
      input#confirmPassword(type='text' required, minLength='8')
    .input_field 
      span.badge.displayBadge#StrengthDisp(style='margin-bottom:10px;') Weak
    .updateBtn
      input.btn-save-password(type='submit' placeholder='Save Password')
script.
  // timeout before a callback is called

  let timeout;

  // traversing the DOM and getting the input and span using their IDs

  let password = document.getElementById('newPassword')
  let strengthBadge = document.getElementById('StrengthDisp')

  // The strong and weak password Regex pattern checker

  let strongPassword = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')
  let mediumPassword = new RegExp('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))')
  
  function StrengthChecker(PasswordParameter){
      // We then change the badge's color and text based on the password strength

      if(strongPassword.test(PasswordParameter)) {
          strengthBadge.style.backgroundColor = "green"
          strengthBadge.textContent = 'Strong'
      } else if(mediumPassword.test(PasswordParameter)){
          strengthBadge.style.backgroundColor = 'blue'
          strengthBadge.textContent = 'Medium'
      } else{
          strengthBadge.style.backgroundColor = 'red'
          strengthBadge.textContent = 'Weak'
      }
  }

  // Adding an input event listener when a user types to the  password input 

  password.addEventListener("input", () => {

      //The badge is hidden by default, so we show it

      strengthBadge.style.display= 'block'
      clearTimeout(timeout);

      //We then call the StrengChecker function as a callback then pass the typed password to it

      timeout = setTimeout(() => StrengthChecker(password.value), 500);

      //Incase a user clears the text, the badge is hidden again

      if(password.value.length !== 0){
          strengthBadge.style.display != 'block'
      } else{
          strengthBadge.style.display = 'none'
      }
  });